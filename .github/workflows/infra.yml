# GitHub Action – provisions DigitalOcean + NameSilo on every push to main
name: Terraform DigitalOcean

on:
  push:
    branches: [ "main" ]

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
      TF_VAR_do_token:    ${{ secrets.DIGITALOCEAN_TOKEN }}

      TF_VAR_ns_key:      ${{ secrets.NAMESILO_API_KEY }}
      TF_VAR_ns_domain:   axialy.ai

      DROPLET_SSH_KEY:    ${{ secrets.DROPLET_SSH_KEY }}

    steps:
    # ── 1)  Checkout ─────────────────────────────────────────────────────────────
    - uses: actions/checkout@v4

    # ── 2)  Detect if marketing site changed (optional deploy later) ────────────
    - id: filter
      uses: dorny/paths-filter@v3
      with:
        list-files: none
        initial-fetch-depth: 100
        filters: |
          marketing:
            - 'axialy-marketing-site/**'

    # ── 3)  doctl (install + auth)  <─— one line, zero curl/tar hassles ─────────
    - uses: digitalocean/action-doctl@v2
      with:
        token: ${{ env.DIGITALOCEAN_TOKEN }}

    # ── 4)  Terraform CLI ───────────────────────────────────────────────────────
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.2

    - name: Terraform init
      run: terraform -chdir=infra init -upgrade -input=false

    # ── 5)  (Optional) import existing DO resources – keep your script unchanged
    - name: Import existing resources
      run: |
        chmod +x infra/import_existing.sh
        infra/import_existing.sh

    # ── 6)  Plan  ───────────────────────────────────────────────────────────────
    - name: Terraform plan
      run: terraform -chdir=infra plan -input=false

    # ── 7)  Apply on main ───────────────────────────────────────────────────────
    - name: Terraform apply
      if: github.ref == 'refs/heads/main'
      run: terraform -chdir=infra apply -auto-approve -input=false

    # ── 8)  Extract droplet IPs to env vars (used by deploy step) ──────────────
    - id: ips
      run: |
        IPS=$(terraform -chdir=infra output -json droplet_ips)
        echo "ROOT_IP=$(  echo "$IPS" | jq -r '.root')"  >> "$GITHUB_ENV"
        echo "UI_IP=$(    echo "$IPS" | jq -r '.ui')"    >> "$GITHUB_ENV"
        echo "API_IP=$(   echo "$IPS" | jq -r '.api')"   >> "$GITHUB_ENV"
        echo "ADMIN_IP=$( echo "$IPS" | jq -r '.admin')" >> "$GITHUB_ENV"

    # ── 9)  Deploy marketing site when files changed ───────────────────────────
    - name: Deploy axialy-marketing-site to root droplet
      if: steps.filter.outputs.marketing == 'true'
      uses: appleboy/scp-action@v0.1.5
      with:
        host:   ${{ env.ROOT_IP }}
        username: root
        key:     ${{ env.DROPLET_SSH_KEY }}
        source:  "axialy-marketing-site/*"
        target:  "/var/www/html/"
        strip_components: 1
