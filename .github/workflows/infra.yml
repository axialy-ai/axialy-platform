name: Infra 🚀

on:
  push:
    branches: [ main ]

env:                               # repo-level secrets (unchanged)
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  TF_VAR_do_token:   ${{ secrets.DIGITALOCEAN_TOKEN }}
  NAMESILO_API_KEY:  ${{ secrets.NAMESILO_API_KEY }}
  NAMESILO_DOMAIN:   axialy.ai
  DROPLET_SSH_KEY:   ${{ secrets.DROPLET_SSH_KEY }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    # ───────────────────────────────  Git  ────────────────────────────────
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0                       # full history (needed for diff)

    # ───────────────────────────  DigitalOcean CLI  ───────────────────────
    - name: Install doctl
      shell: bash
      run: |
        set -e
        VER=$(curl -s https://api.github.com/repos/digitalocean/doctl/releases/latest \
               | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
        curl -sL "https://github.com/digitalocean/doctl/releases/download/v${VER}/doctl-${VER}-linux-amd64.tar.gz" \
        | tar -xz
        sudo mv doctl /usr/local/bin
    - name: Auth doctl
      run: doctl auth init -t "$DIGITALOCEAN_TOKEN"

    # ─────────────────────────────  Terraform  ────────────────────────────
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.2
        cli_config_credentials_hostname: app.terraform.io

    - name: Terraform init
      run: terraform -chdir=infra init -upgrade

    - name: Import existing DO resources
      run: bash infra/import_existing.sh

    - name: Terraform apply (auto‐approve)
      run: terraform -chdir=infra apply -auto-approve -input=false

    # ──────────────────────  Extract droplet IP addresses  ────────────────
    - name: Install jq (for JSON parsing)
      run: sudo apt-get update -y && sudo apt-get install -y jq

    - id: droplet_ips
      name: Grab droplet_ips object and split into scalar outputs
      shell: bash
      run: |
        ips_json=$(terraform -chdir=infra output -json droplet_ips)
        echo "root=$(  echo "$ips_json" | jq -r '.root')"  >> "$GITHUB_OUTPUT"
        echo "ui=$(    echo "$ips_json" | jq -r '.ui')"    >> "$GITHUB_OUTPUT"
        echo "api=$(   echo "$ips_json" | jq -r '.api')"   >> "$GITHUB_OUTPUT"
        echo "admin=$( echo "$ips_json" | jq -r '.admin')" >> "$GITHUB_OUTPUT"

    # ─────────────────────────  Update NameSilo DNS  ──────────────────────
    - name: Update NameSilo A records
      env:
        ROOT_IP:  ${{ steps.droplet_ips.outputs.root }}
        UI_IP:    ${{ steps.droplet_ips.outputs.ui }}
        API_IP:   ${{ steps.droplet_ips.outputs.api }}
        ADMIN_IP: ${{ steps.droplet_ips.outputs.admin }}
      run: bash infra/update_namesilo.sh

    # ────────────────────────  Deploy marketing site  ─────────────────────
    - name: Detect changes under axialy-marketing-site/
      id: site_changed
      shell: bash
      run: |
        git diff --quiet ${{ github.event.before }} ${{ github.sha }} -- axialy-marketing-site/ \
        || echo "changed=true" >> "$GITHUB_OUTPUT"

    - name: Deploy axialy-marketing-site to root droplet
      if: steps.site_changed.outputs.changed == 'true'
      uses: easingthemes/ssh-deploy@v4
      env:
        SSH_PRIVATE_KEY: ${{ secrets.DROPLET_SSH_KEY }}
        SOURCE:  "axialy-marketing-site/"
        REMOTE_HOST: ${{ steps.droplet_ips.outputs.root }}
        REMOTE_USER: root
        TARGET: "/var/www/axialy"
        ARGS: "-o StrictHostKeyChecking=no"
