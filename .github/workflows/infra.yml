# .github/workflows/deploy.yml
name: Deploy Axialy

on:
  push:
    branches: [main]

env:
  DIGITALOCEAN_TOKEN:        ${{ secrets.DIGITALOCEAN_TOKEN }}
  TF_VAR_do_token:           ${{ secrets.DIGITALOCEAN_TOKEN }}
  NAMESILO_API_KEY:          ${{ secrets.NAMESILO_API_KEY }}
  NAMESILO_DOMAIN:           axialy.ai
  DROPLET_SSH_KEY:           ${{ secrets.DROPLET_SSH_KEY }}
  DROPLET_SSH_PASSPHRASE:    ${{ secrets.DROPLET_SSH_PASSPHRASE }}
  TF_VAR_ssh_fingerprint:    ${{ secrets.SSH_FINGERPRINT }}

jobs:
  deploy:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash -Eeuo pipefail {0}

    steps:
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Source & tooling â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.2
        cli_config_credentials_hostname: app.terraform.io

    - name: Install latest doctl
      run: |
        VER=$(curl -s https://api.github.com/repos/digitalocean/doctl/releases/latest \
               | jq -r '.tag_name' | sed 's/^v//')
        curl -sL "https://github.com/digitalocean/doctl/releases/download/v${VER}/doctl-${VER}-linux-amd64.tar.gz" \
          | tar -xz
        sudo mv doctl /usr/local/bin

    - name: Authenticate doctl
      run: doctl auth init -t "$DIGITALOCEAN_TOKEN"

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Terraform apply â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Terraform init
      run: terraform -chdir=infra init

    - name: Import pre-existing resources
      run: bash infra/import_existing.sh

    - name: Terraform apply
      run: terraform -chdir=infra apply -auto-approve -input=false

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Capture public IPs reliably â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Capture droplet public IPs
      id: capture_ips
      run: |
        get_ip() {
          local key=$1
          for i in {1..20}; do
            ip=$(terraform -chdir=infra output -json droplet_ips | jq -r --arg k "$key" '.[$k]')
            if [[ -n "$ip" && "$ip" != "null" ]]; then
              echo "$ip"
              return
            fi
            sleep 10
          done
          echo "::error::Failed to fetch IP for $key after 200 s" >&2
          exit 1
        }

        echo "ROOT_IP=$(get_ip root)"   >>"$GITHUB_ENV"
        echo "UI_IP=$(get_ip ui)"       >>"$GITHUB_ENV"
        echo "ADMIN_IP=$(get_ip admin)" >>"$GITHUB_ENV"
        echo "API_IP=$(get_ip api)"     >>"$GITHUB_ENV"

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Wait until SSH is up â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Wait for SSH on all droplets
      run: |
        wait_ssh () {
          local host=$1
          echo "ðŸ“¡  Waiting for $host"
          for i in {1..30}; do
            nc -z -w3 "$host" 22 && { echo "âœ…  $host reachable"; return; }
            sleep 5
          done
          echo "::error::$host never became reachable" >&2
          exit 1
        }

        wait_ssh "$ROOT_IP"
        wait_ssh "$UI_IP"
        wait_ssh "$ADMIN_IP"
        wait_ssh "$API_IP"

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ File transfer (SCP) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Copy files to ROOT droplet
      uses: appleboy/scp-action@v0.1.5
      with:
        host:        ${{ env.ROOT_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:      deploy/root/
        target:      /root/axialy

    - name: Copy files to UI droplet
      uses: appleboy/scp-action@v0.1.5
      with:
        host:        ${{ env.UI_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:      deploy/ui/
        target:      /root/axialy

    - name: Copy files to ADMIN droplet
      uses: appleboy/scp-action@v0.1.5
      with:
        host:        ${{ env.ADMIN_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:      deploy/admin/
        target:      /root/axialy

    - name: Copy files to API droplet
      uses: appleboy/scp-action@v0.1.5
      with:
        host:        ${{ env.API_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:      deploy/api/
        target:      /root/axialy

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Remote deploy (SSH) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Deploy ROOT droplet
      uses: appleboy/ssh-action@v0.1.6
      with:
        host:        ${{ env.ROOT_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        script: |
          cd /root/axialy
          chmod +x deploy.sh
          ./deploy.sh

    - name: Deploy UI droplet
      uses: appleboy/ssh-action@v0.1.6
      with:
        host:        ${{ env.UI_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        script: |
          cd /root/axialy
          chmod +x deploy.sh
          ./deploy.sh

    - name: Deploy ADMIN droplet
      uses: appleboy/ssh-action@v0.1.6
      with:
        host:        ${{ env.ADMIN_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        script: |
          cd /root/axialy
          chmod +x deploy.sh
          ./deploy.sh

    - name: Deploy API droplet
      uses: appleboy/ssh-action@v0.1.6
      with:
        host:        ${{ env.API_IP }}
        username:    root
        key:         ${{ env.DROPLET_SSH_KEY }}
        passphrase:  ${{ env.DROPLET_SSH_PASSPHRASE }}
        script: |
          cd /root/axialy
          chmod +x deploy.sh
          ./deploy.sh
