name: Provision + Deploy Axialy stack
on:
  push:
    branches: [main]

###############################################################################
# repo-wide secrets
###############################################################################
env:
  DIGITALOCEAN_TOKEN:      ${{ secrets.DIGITALOCEAN_TOKEN }}
  TF_VAR_do_token:         ${{ secrets.DIGITALOCEAN_TOKEN }}

  NAMESILO_API_KEY:        ${{ secrets.NAMESILO_API_KEY }}
  NAMESILO_DOMAIN:         axialy.ai

  DROPLET_SSH_KEY:         ${{ secrets.DROPLET_SSH_KEY }}
  DROPLET_SSH_PASSPHRASE:  ${{ secrets.DROPLET_SSH_PASSPHRASE }}
  TF_VAR_ssh_fingerprint:  ${{ secrets.SSH_FINGERPRINT }}

jobs:
  all:
    runs-on: ubuntu-24.04

    steps:
    # ───────────────── 1 ─ Checkout ────────────────────────────────────────
    - uses: actions/checkout@v4

    # ───────────────── 2 ─ Terraform CLI ──────────────────────────────────
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.2

    # ───────────────── 3 ─ Terraform init ─────────────────────────────────
    - name: Terraform init
      run: terraform -chdir=infra init

    # ───────────────── 4 ─ Install doctl (needed for import script) ───────
    - name: Install doctl
      run: |
        set -e
        VER=$(curl -s https://api.github.com/repos/digitalocean/doctl/releases/latest |
              grep '"tag_name"' | sed -E 's/.*"v([^"]+)".*/\1/')
        curl -sL "https://github.com/digitalocean/doctl/releases/download/v${VER}/doctl-${VER}-linux-amd64.tar.gz" |
          tar -xz
        sudo mv doctl /usr/local/bin

    # ───────────────── 5 ─ doctl auth ─────────────────────────────────────
    - name: doctl auth
      run: doctl auth init -t "$DIGITALOCEAN_TOKEN"

    # ───────────────── 6 ─ Import existing DO resources ───────────────────
    - name: Import existing resources into state
      run: bash infra/import_existing.sh

    # ───────────────── 7 ─ Terraform apply ────────────────────────────────
    - name: Terraform apply
      run: |
        set -eo pipefail
        terraform -chdir=infra apply -auto-approve -input=false

    # ───────────────── 8 ─ Capture droplet IPs into env ───────────────────
    - id: capture
      run: |
        set -e
        IPS_JSON=$(terraform -chdir=infra output -json droplet_ips)
        for key in root ui admin api; do
          echo "${key^^}_IP=$(jq -r --arg k "$key" '.[$k]' <<<"$IPS_JSON")" >>"$GITHUB_ENV"
        done

    # ───────────────── 9 ─ Wait for SSH on each droplet ───────────────────
    - name: ⏳ wait for SSH
      run: |
        set -e
        wait_ssh () {
          local host=$1
          echo "📡  $host"
          for i in {1..30}; do nc -z -w3 "$host" 22 && return; sleep 5; done
          echo "::error::$host never became reachable"; exit 1
        }
        wait_ssh "$ROOT_IP"; wait_ssh "$UI_IP"; wait_ssh "$ADMIN_IP"; wait_ssh "$API_IP"

    # ───────────────── 10 ─ Update NameSilo zone ──────────────────────────
    - name: Update NameSilo DNS
      env:
        NAMESILO_API_KEY: ${{ env.NAMESILO_API_KEY }}
        NAMESILO_DOMAIN:  ${{ env.NAMESILO_DOMAIN }}
      run: bash infra/update_namesilo.sh

    # ───────────────── 11 ─ Rsync code to each droplet ────────────────────
    - name: Rsync marketing → root
      uses: appleboy/scp-action@v0.1.5
      with:
        host:       ${{ env.ROOT_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:     axialy-marketing-site/*
        target:     /var/www/html/
        strip_components: 1
        timeout:    120s

    - name: Rsync UI → ui
      uses: appleboy/scp-action@v0.1.5
      with:
        host:       ${{ env.UI_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:     axialy-ui-product/*
        target:     /var/www/html/
        strip_components: 1
        timeout:    120s

    - name: Rsync Admin → admin
      uses: appleboy/scp-action@v0.1.5
      with:
        host:       ${{ env.ADMIN_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:     axialy-admin-product/*
        target:     /var/www/html/
        strip_components: 1
        timeout:    120s

    - name: Rsync API → api
      uses: appleboy/scp-action@v0.1.5
      with:
        host:       ${{ env.API_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:     axialy-api-product/*
        target:     /var/www/html/
        strip_components: 1
        timeout:    120s

    # ───────────────── 12 ─ Write .env on Admin droplet ───────────────────
    - name: Write .env on Admin droplet
      uses: appleboy/ssh-action@v0.1.6
      with:
        host:       ${{ env.ADMIN_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        envs:       TF_VAR_do_token
        script: |
          DB_HOST=$(terraform -chdir=infra output -raw mysql_host)
          DB_PORT=$(terraform -chdir=infra output -raw mysql_port)
          DB_USER=$(terraform -chdir=infra output -raw mysql_user)
          DB_PASS=$(terraform -chdir=infra output -raw mysql_password)
          cat >/var/www/html/.env <<EOF
          DB_HOST=$DB_HOST
          DB_PORT=$DB_PORT
          DB_NAME=Axialy_Admin
          DB_USER=$DB_USER
          DB_PASSWORD=$DB_PASS
          EOF
          chown www-data:www-data /var/www/html/.env
          systemctl reload php8.1-fpm || true
