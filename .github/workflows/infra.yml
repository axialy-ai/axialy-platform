name: Terraform DigitalOcean
on:
  push:
    branches: [ "main" ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      DIGITALOCEAN_TOKEN:  ${{ secrets.DIGITALOCEAN_TOKEN }}
      TF_VAR_do_token:     ${{ secrets.DIGITALOCEAN_TOKEN }}
      NAMESILO_API_KEY:    ${{ secrets.NAMESILO_API_KEY }}
      NAMESILO_DOMAIN:     axialy.ai
      # ➜ add a secret with the pass-phrase that protects your SSH key
      DROPLET_SSH_KEY:     ${{ secrets.DROPLET_SSH_KEY }}
      DROPLET_SSH_PASSPHRASE: ${{ secrets.DROPLET_SSH_PASSPHRASE }}

    steps:
    # ───────────────────────────────
    # Checkout & Terraform (unchanged)
    # ───────────────────────────────
    - uses: actions/checkout@v4
    # … all the Terraform steps you already have …

    # Grab public IPs  ──────────────
    - id: ips
      run: |
        IPS=$(terraform -chdir=infra output -json droplet_ips)
        echo ROOT_IP=$(jq -r '.root'  <<<"$IPS")  >>"$GITHUB_ENV"
        echo UI_IP=$(  jq -r '.ui'    <<<"$IPS")  >>"$GITHUB_ENV"
        echo API_IP=$( jq -r '.api'   <<<"$IPS")  >>"$GITHUB_ENV"
        echo ADMIN_IP=$(jq -r '.admin'<<<"$IPS")  >>"$GITHUB_ENV"

    # Wait for each droplet’s SSH port
    - name: ⏳ Wait for SSH on new droplets
      shell: bash
      run: |
        wait_ssh () {
          local HOST=$1
          echo "Waiting for SSH on $HOST …"
          for i in {1..30}; do
            if nc -z -w3 "$HOST" 22; then
              echo "✅  $HOST is ready"
              return 0
            fi
            sleep 5
          done
          echo "::error::SSH never became ready on $HOST"; exit 1
        }
        wait_ssh "$ROOT_IP"
        wait_ssh "$UI_IP"
        wait_ssh "$ADMIN_IP"
      env:
        ROOT_IP:  ${{ env.ROOT_IP }}
        UI_IP:    ${{ env.UI_IP }}
        ADMIN_IP: ${{ env.ADMIN_IP }}

    # ───────────────────────────────
    # Deploy static sites (now with pass-phrase, no unsupported inputs)
    # ───────────────────────────────
    - name: Deploy marketing site → root
      uses: appleboy/scp-action@v0.1.5
      with:
        host:       ${{ env.ROOT_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:     axialy-marketing-site/*
        target:     /var/www/html/
        strip_components: 1
        timeout:    120s          # ← only recognised input; “retry” removed
        port:       22

    - name: Deploy UI product → ui droplet
      uses: appleboy/scp-action@v0.1.5
      with:
        host:       ${{ env.UI_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:     axialy-ui-product/*
        target:     /var/www/html/
        strip_components: 1
        timeout:    120s
        port:       22

    - name: Deploy Admin product → admin droplet
      uses: appleboy/scp-action@v0.1.5
      with:
        host:       ${{ env.ADMIN_IP }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:     axialy-admin-product/*
        target:     /var/www/html/
        strip_components: 1
        timeout:    120s
        port:       22
