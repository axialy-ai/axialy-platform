name: Deploy Admin

on:
  push:
    branches: [ "main" ]
    paths:
      - "axialy-admin-product/**"
      - ".github/workflows/deploy-admin.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DIGITALOCEAN_TOKEN:     ${{ secrets.DIGITALOCEAN_TOKEN }}
      DROPLET_SSH_KEY:        ${{ secrets.DROPLET_SSH_KEY }}
      DROPLET_SSH_PASSPHRASE: ${{ secrets.DROPLET_SSH_PASSPHRASE }}

    steps:
    - uses: actions/checkout@v4

    # ───────── doctl ─────────
    - name: Install doctl
      env: { GH_TOKEN: ${{ github.token }} }
      run: |
        set -euo pipefail
        ver=$(curl -sSfL -H "Authorization: bearer $GH_TOKEN" \
                https://api.github.com/repos/digitalocean/doctl/releases/latest |
              grep -oP '"tag_name"\s*:\s*"\Kv[0-9.]+' || echo "v1.131.0")
        curl -sSfL \
          "https://github.com/digitalocean/doctl/releases/download/${ver}/doctl-${ver#v}-linux-amd64.tar.gz" |
          tar -xz doctl
        sudo mv doctl /usr/local/bin
        doctl auth init -t "$DIGITALOCEAN_TOKEN"

    # ───────── DB creds ──────
    - id: db
      run: |
        CID=$(doctl databases list --format ID,Name --no-header |
              awk '$2=="axialy-db-cluster"{print $1; exit}')
        URI=$(doctl databases connection "$CID" --format URI --no-header)
        host=$(sed -E 's|mysql://[^:]+:[^@]+@([^:]+):([0-9]+)/.*|\1|' <<<"$URI")
        port=$(sed -E 's|mysql://[^:]+:[^@]+@([^:]+):([0-9]+)/.*|\2|' <<<"$URI")
        user=$(sed -E 's|mysql://([^:]+):[^@]+@.*|\1|'                <<<"$URI")
        pass=$(sed -E 's|mysql://[^:]+:([^@]+)@.*|\1|'                <<<"$URI")
        echo "::add-mask::$pass"
        { echo "host=$host"; echo "port=$port"; echo "user=$user"; echo "pass=$pass"; } >>"$GITHUB_OUTPUT"

    # ───────── droplet IP ────
    - id: ip
      run: |
        ip=$(doctl compute droplet list --format Name,PublicIPv4 --no-header |
             awk '$1=="admin.axialy.ai"{print $2; exit}')
        echo "ip=$ip" >>"$GITHUB_OUTPUT"

    # ───────── wait SSH ──────
    - name: Wait for SSH
      run: |
        for i in {1..30}; do
          nc -z -w3 ${{ steps.ip.outputs.ip }} 22 && exit 0
          sleep 5
        done
        echo "::error ::SSH never became ready"; exit 1

    # ───────── rsync code ────
    - name: Upload Admin source
      uses: appleboy/scp-action@v0.1.5
      with:
        host:             ${{ steps.ip.outputs.ip }}
        username:         root
        key:              ${{ env.DROPLET_SSH_KEY }}
        passphrase:       ${{ env.DROPLET_SSH_PASSPHRASE }}
        source:           axialy-admin-product/*
        target:           /var/www/html/
        strip_components: 1
        timeout:          120s

    # ───────── drop .env ─────
    - name: Write runtime secrets
      uses: appleboy/ssh-action@v0.1.6
      with:
        host:       ${{ steps.ip.outputs.ip }}
        username:   root
        key:        ${{ env.DROPLET_SSH_KEY }}
        passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
        script: |
          cat >/var/www/html/.env <<EOF
          DB_HOST=${{ steps.db.outputs.host }}
          DB_PORT=${{ steps.db.outputs.port }}
          DB_NAME=Axialy_Admin
          DB_USER=${{ steps.db.outputs.user }}
          DB_PASSWORD=${{ steps.db.outputs.pass }}
          ADMIN_DEFAULT_USER=${{ secrets.ADMIN_DEFAULT_USER }}
          ADMIN_DEFAULT_EMAIL=${{ secrets.ADMIN_DEFAULT_EMAIL }}
          ADMIN_DEFAULT_PASSWORD=${{ secrets.ADMIN_DEFAULT_PASSWORD }}
          EOF
          chown www-data:www-data /var/www/html/.env
          chmod 640 /var/www/html/.env
          systemctl reload php-fpm
          systemctl reload nginx

    # ───────── verify HTTP ───
    - name: Wait for HTTP
      run: |
        for i in {1..60}; do
          curl -sSf "http://${{ steps.ip.outputs.ip }}/" >/dev/null && exit 0
          sleep 5
        done
        echo "::error ::Port 80 never came up"; exit 1
