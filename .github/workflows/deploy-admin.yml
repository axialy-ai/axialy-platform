name: Deploy ADMIN Product
on:
  push:
    branches: [ "main" ]
    paths: [ "axialy-admin-product/**" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DIGITALOCEAN_TOKEN:      ${{ secrets.DIGITALOCEAN_TOKEN }}
      DROPLET_SSH_KEY:         ${{ secrets.DROPLET_SSH_KEY }}
      DROPLET_SSH_PASSPHRASE:  ${{ secrets.DROPLET_SSH_PASSPHRASE }}
      DB_CLUSTER_NAME:         axialy-mysql        # constant – matches cluster.tf

    steps:
      # 1 — checkout
      - uses: actions/checkout@v4

      # 2 — install doctl + auth
      - name: Install & auth doctl
        run: |
          set -e
          ver=$(curl -s https://api.github.com/repos/digitalocean/doctl/releases/latest |
                 grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          curl -sL "https://github.com/digitalocean/doctl/releases/download/v${ver}/doctl-${ver}-linux-amd64.tar.gz" |
            tar -xz
          sudo mv doctl /usr/local/bin
          doctl auth init -t "$DIGITALOCEAN_TOKEN"

      # 3 — discover droplet IP
      - id: ip
        name: Look-up ADMIN droplet IP
        run: |
          ip=$(doctl compute droplet list --format Name,PublicIPv4 --no-header |
               awk '$1=="admin.axialy.ai"{print $2; exit}')
          [ -n "$ip" ] || { echo "::error::admin droplet not found"; exit 1; }
          echo "ip=$ip" >>"$GITHUB_OUTPUT"

      # 4 — wait for ssh
      - name: Wait for SSH
        run: |
          for i in {1..30}; do
            nc -z -w3 ${{ steps.ip.outputs.ip }} 22 && exit 0
            sleep 5
          done
          echo "::error::SSH never became ready"; exit 1

      # 5 — ensure NGINX + PHP
      - name: Install & configure NGINX + PHP-FPM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host:       ${{ steps.ip.outputs.ip }}
          username:   root
          key:        ${{ env.DROPLET_SSH_KEY }}
          passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
          script: |
            set -e
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -y
            apt-get install -y nginx php-fpm php-mysql
            PHP_SOCK=$(ls /run/php/php*-fpm.sock | head -n1)
            cat >/etc/nginx/sites-available/default <<EOF
            server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name admin.axialy.ai _;
              root /var/www/html;
              index index.php index.html;
              location /        { try_files \$uri \$uri/ /index.php?\$args; }
              location ~ \.php$ { include snippets/fastcgi-php.conf;
                                   fastcgi_pass unix:${PHP_SOCK}; }
            }
EOF
            systemctl enable --now nginx
            systemctl restart nginx php*-fpm

      # 6 — write /etc/axialy_admin_env
      - name: Provision env-file on droplet
        uses: appleboy/ssh-action@v0.1.6
        with:
          host:       ${{ steps.ip.outputs.ip }}
          username:   root
          key:        ${{ env.DROPLET_SSH_KEY }}
          passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
          script: |
            set -e
            CLUSTER_ID=$(doctl databases list --format Name,ID --no-header |
                          awk '$1=="'"$DB_CLUSTER_NAME"'"{print $2; exit}')
            USER="axialy_admin_app"
            URI=$(doctl databases connection "$CLUSTER_ID" \
                   --format "mysql://{{username}}:{{password}}@{{private_host}}:{{port}}/{{database}}" \
                   --dbname Axialy_ADMIN --username "$USER" --output text)
            H=$(echo $URI | sed -E 's|mysql://[^@]+@([^:]+):([0-9]+)/.*|\1|')
            P=$(echo $URI | sed -E 's|mysql://[^@]+@([^:]+):([0-9]+)/.*|\2|')
            PW=$(echo $URI | sed -E 's|mysql://[^:]+:([^@]+)@.*|\1|')
            echo "::add-mask::$PW"
            cat >/etc/axialy_admin_env <<EOF
DB_HOST=$H
DB_PORT=$P
DB_NAME=Axialy_ADMIN
DB_USER=$USER
DB_PASSWORD=$PW
EOF
            chmod 600 /etc/axialy_admin_env

      # 7 — rsync code
      - name: Rsync Admin build
        uses: appleboy/scp-action@v0.1.5
        with:
          host:       ${{ steps.ip.outputs.ip }}
          username:   root
          key:        ${{ env.DROPLET_SSH_KEY }}
          passphrase: ${{ env.DROPLET_SSH_PASSPHRASE }}
          source:     axialy-admin-product/*
          target:     /var/www/html/
          strip_components: 1
          timeout:    120s
