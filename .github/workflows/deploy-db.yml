name: Deploy MySQL Schemas
on:
  push:
    branches: [ "main" ]
    paths: [ "db/**" ]

jobs:
  deploy-db:
    runs-on: ubuntu-latest

    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
      DB_CLUSTER_NAME:    axialy-mysql          # <â€” constant, not a secret

    steps:
    - uses: actions/checkout@v4

    # ------------------------------------------------ install doctl
    - name: Install & auth doctl
      run: |
        ver=$(curl -s https://api.github.com/repos/digitalocean/doctl/releases/latest |
              grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
        curl -sL "https://github.com/digitalocean/doctl/releases/download/v${ver}/doctl-${ver}-linux-amd64.tar.gz" |
          tar -xz
        sudo mv doctl /usr/local/bin
        doctl auth init -t "$DIGITALOCEAN_TOKEN"

    # ------------------------------------------------ look-up cluster + 1-hour URI
    - name: Look-up cluster & get temp URI
      id: conn
      run: |
        CLUSTER_ID=$(doctl databases list --format Name,ID --no-header \
                       | awk '$1=="'"$DB_CLUSTER_NAME"'"{print $2; exit}')

        URI=$(doctl databases connection "$CLUSTER_ID" --format URI --no-header)

        HOST=$(echo $URI | sed -E 's|mysql://[^@]+@([^:]+):([0-9]+)/.*|\1|')
        PORT=$(echo $URI | sed -E 's|mysql://[^@]+@([^:]+):([0-9]+)/.*|\2|')
        USER=$(echo $URI | sed -E 's|mysql://([^:]+):.*|\1|')
        PASS=$(echo $URI | sed -E 's|mysql://[^:]+:([^@]+)@.*|\1|')

        echo "::add-mask::$PASS"
        echo "host=$HOST" >> $GITHUB_OUTPUT
        echo "port=$PORT" >> $GITHUB_OUTPUT
        echo "user=$USER" >> $GITHUB_OUTPUT
        echo "pass=$PASS" >> $GITHUB_OUTPUT

    # ------------------------------------------------ apply schemas
    - name: Apply Axialy_UI schema
      run: |
        mysql -h${{ steps.conn.outputs.host }} -P${{ steps.conn.outputs.port }} \
              -u${{ steps.conn.outputs.user }} -p${{ steps.conn.outputs.pass }} Axialy_UI \
              < db/axialy_ui.sql

    - name: Apply Axialy_ADMIN schema
      run: |
        mysql -h${{ steps.conn.outputs.host }} -P${{ steps.conn.outputs.port }} \
              -u${{ steps.conn.outputs.user }} -p${{ steps.conn.outputs.pass }} Axialy_ADMIN \
              < db/axialy_admin.sql
