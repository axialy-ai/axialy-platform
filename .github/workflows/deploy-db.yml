name: Deploy MySQL Schemas
on:
  push:
    branches: [ "main" ]
    paths:
      - "db/**"

jobs:
  deploy-db:
    runs-on: ubuntu-latest
    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
      TF_VAR_do_token:    ${{ secrets.TF_VAR_do_token }}   # if youâ€™re already using it
      DO_DB_CLUSTER:      7ca7a1f8-2971-4f9b-a54e-9d6e16d162bc   # <- cluster ID from TF
    steps:
      - uses: actions/checkout@v4

      - name: Install & auth doctl
        run: |
          ver=$(curl -s https://api.github.com/repos/digitalocean/doctl/releases/latest \
               | grep '"tag_name"' | sed -E 's/.*"v([^"]+)".*/\1/')
          curl -sL "https://github.com/digitalocean/doctl/releases/download/v${ver}/doctl-${ver}-linux-amd64.tar.gz" | tar -xz
          sudo mv doctl /usr/local/bin
          doctl auth init -t "$DIGITALOCEAN_TOKEN"

      - name: Get temporary connection strings
        id: conn
        run: |
          # This gives a 1-hour-lived mysql:// URI
          uri=$(doctl databases connection $DO_DB_CLUSTER --format URI --no-header)
          # split into host/port/user/password/db
          host=$(echo $uri | sed -E 's|mysql://([^:]+):([^@]+)@([^:]+):([0-9]+)/(.+)|\3|')
          port=$(echo $uri | sed -E 's|mysql://([^:]+):([^@]+)@([^:]+):([0-9]+)/(.+)|\4|')
          user=$(echo $uri | sed -E 's|mysql://([^:]+):([^@]+)@([^:]+):([0-9]+)/(.+)|\1|')
          pass=$(echo $uri | sed -E 's|mysql://([^:]+):([^@]+)@([^:]+):([0-9]+)/(.+)|\2|')
          echo "host=$host" >> $GITHUB_OUTPUT
          echo "port=$port" >> $GITHUB_OUTPUT
          echo "user=$user" >> $GITHUB_OUTPUT
          echo "::add-mask::$pass"
          echo "pass=$pass" >> $GITHUB_OUTPUT

      - name: Apply Axialy_UI schema
        run: |
          mysql -h${{ steps.conn.outputs.host }} -P${{ steps.conn.outputs.port }} \
                -u${{ steps.conn.outputs.user }} -p${{ steps.conn.outputs.pass }} Axialy_UI \
                < db/axialy_ui.sql

      - name: Apply Axialy_ADMIN schema
        run: |
          mysql -h${{ steps.conn.outputs.host }} -P${{ steps.conn.outputs.port }} \
                -u${{ steps.conn.outputs.user }} -p${{ steps.conn.outputs.pass }} Axialy_ADMIN \
                < db/axialy_admin.sql
